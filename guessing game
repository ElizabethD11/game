import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        // Loop to let the user play multiple games
        boolean keepPlaying = true;

        while (keepPlaying) {
            System.out.println("Welcome to the Guessing Game!");
            System.out.println("Choose a difficulty level:");
            System.out.println("1. Easy (1 to 10)");
            System.out.println("2. Medium (1 to 100)");
            System.out.println("3. Hard (1 to 1000) - 10 attempts only");

            // Get a valid difficulty level
            int difficulty = getValidDifficulty(scanner);

            // Set up the game based on the difficulty
            int maxNumber = 10;  // Default to Easy
            int maxAttempts = Integer.MAX_VALUE;  // No attempt limit for Easy and Medium

            if (difficulty == 2) {
                maxNumber = 100;  // Medium difficulty
            } else if (difficulty == 3) {
                maxNumber = 1000;  // Hard difficulty
                maxAttempts = 10;  // Hard mode has a maximum of 10 attempts
            }

            // Generate the random number to guess
            int rndmNum = random.nextInt(maxNumber) + 1;
            int attempts = 0;
            boolean correctGuess = false;
            String input;

            System.out.println("I have chosen a random number between 1 and " + maxNumber + ". Try to guess it!");
            System.out.println("You have " + (maxAttempts == Integer.MAX_VALUE ? "unlimited" : maxAttempts) + " attempts.");

            while (!correctGuess && attempts < maxAttempts) {
                System.out.print("Enter your guess: ");
                input = scanner.nextLine().trim();

                if (input.equalsIgnoreCase("quit")) {
                    System.out.println("You have quit the game. The number was " + rndmNum + ".");
                    break;
                }

                // Check if the input is numeric and within the valid range
                if (isNumeric(input)) {
                    // Convert the input to a number manually
                    int guess = 0;
                    for (int i = 0; i < input.length(); i++) {
                        guess = guess * 10 + (input.charAt(i) - '0');  // Convert each character to its corresponding digit
                    }

                    // Now guess is an integer
                    if (guess < 1 || guess > maxNumber) {
                        System.out.println("Please guess a number between 1 and " + maxNumber + ".");
                    } else {
                        attempts++;
                        if (guess < rndmNum) {
                            System.out.println("The number is higher than " + guess + ".");
                        } else if (guess > rndmNum) {
                            System.out.println("The number is lower than " + guess + ".");
                        } else {
                            correctGuess = true;
                            System.out.println("Congratulations! You've guessed the number in " + attempts + " attempts.");
                        }
                    }
                } else {
                    System.out.println("Please enter a valid number.");
                }

                // If max attempts reached in hard mode, stop
                if (attempts == maxAttempts) {
                    System.out.println("Sorry, you've reached the maximum attempts.");
                    break;
                }
            }

            // Ask if they want to play again
            System.out.print("Would you like to play again? (yes/no): ");
            String playAgain = scanner.nextLine().trim();
            if (!playAgain.equalsIgnoreCase("yes")) {
                keepPlaying = false;
                System.out.println("Thanks for playing! Goodbye!");
            }
        }
    }

    // Method to get a valid difficulty input
    private static int getValidDifficulty(Scanner scanner) {
        int difficulty = 0;
        while (difficulty < 1 || difficulty > 3) {
            System.out.print("Please enter a difficulty level (1-3): ");
            difficulty = Integer.parseInt(scanner.nextLine().trim());  // You may still parse this
        }
        return difficulty;
    }

    // Method to check if a string is numeric
    private static boolean isNumeric(String str) {
        for (int i = 0; i < str.length(); i++) {
            if (str.charAt(i) < '0' || str.charAt(i) > '9') {
                return false;  // If any character is not a digit, return false
            }
        }
        return true;  // All characters are digits, it's a valid number
    }
}
